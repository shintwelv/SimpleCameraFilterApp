//
//  CameraPreviewRouter.swift
//  CameraFilterApp
//
//  Created by siheo on 11/27/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol CameraPreviewRoutingLogic
{
    func routeToListFilters(segue: UIStoryboardSegue?)
    func routeToEditPhoto(segue: UIStoryboardSegue?)
    func routeToCreateUser(segue: UIStoryboardSegue?)
}

protocol CameraPreviewDataPassing
{
    var dataStore: CameraPreviewDataStore? { get }
}

class CameraPreviewRouter: NSObject, CameraPreviewRoutingLogic, CameraPreviewDataPassing
{
    weak var viewController: CameraPreviewViewController?
    var dataStore: CameraPreviewDataStore?
    
    // MARK: Routing
    func routeToListFilters(segue: UIStoryboardSegue?) {
        if let segue = segue {
            let dstVC = segue.destination as! ListFiltersViewController
            var dstDS = dstVC.router!.dataStore!
            passDataToListFilters(source: dataStore!, destination: &dstDS)
            navigateToListFilters(source: viewController!, destination: dstVC)
        } else {
            let dstVC = ListFiltersViewController()
            var dstDS = dstVC.router!.dataStore!
            passDataToListFilters(source: dataStore!, destination: &dstDS)
            navigateToListFilters(source: viewController!, destination: dstVC)
        }
    }
    
    func routeToEditPhoto(segue: UIStoryboardSegue?) {
        if let segue = segue {
            guard let dstVC = segue.destination as? EditPhotoViewController,
                    var dstDS = dstVC.router?.dataStore else { return }
            
            passDataToEditPhoto(source: dataStore!, destination: &dstDS)
            navigateToEditPhoto(source: viewController!, destination: dstVC)
        } else {
            let dstVC = EditPhotoViewController()
            guard var dstDS = dstVC.router?.dataStore else { return }
            
            passDataToEditPhoto(source: dataStore!, destination: &dstDS)
            navigateToEditPhoto(source: viewController!, destination: dstVC)
        }
    }
    
    func routeToCreateUser(segue: UIStoryboardSegue?) {
        if let segue = segue {
            guard let dstVC = segue.destination as? CreateUserViewController,
              var dstDS = dstVC.router?.dataStore else { return }
            
            passDataToCreateUser(source: dataStore!, destination: &dstDS)
            navigateToCreateUser(source: viewController!, destination: dstVC)
        } else {
            let dstVC = CreateUserViewController()
            guard var dstDS = dstVC.router?.dataStore else { return }
            
            passDataToCreateUser(source: dataStore!, destination: &dstDS)
            navigateToCreateUser(source: viewController!, destination: dstVC)
        }
    }
    
    // MARK: Navigation
    func navigateToListFilters(source: CameraPreviewViewController, destination: ListFiltersViewController) {
        source.show(destination, sender: nil)
    }
    
    func navigateToEditPhoto(source: CameraPreviewViewController, destination: EditPhotoViewController) {
        destination.modalPresentationStyle = .fullScreen
        source.present(destination, animated: true)
    }
    
    func navigateToCreateUser(source: CameraPreviewViewController, destination: CreateUserViewController) {
        destination.modalPresentationStyle = .fullScreen
        source.show(destination, sender: nil)
    }
    
    // MARK: Passing data
    func passDataToListFilters(source: CameraPreviewDataStore, destination: inout ListFiltersDataStore) {
        
    }
    
    func passDataToEditPhoto(source: CameraPreviewDataStore, destination: inout EditPhotoDataStore) {
        destination.photo = source.selectedPhoto
    }
    
    func passDataToCreateUser(source: CameraPreviewDataStore, destination: inout CreateUserDataStore) {
        
    }
}
